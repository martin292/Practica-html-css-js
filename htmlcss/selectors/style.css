/*
Selectores

Parent and Sibling Combinators.

> - the child combinator
+ - the adjacent sibling combinator
~ - the general sibling combinator

Dynamic and User Action Pseudo-classes.
ej: :focus ; :hover ; :active ; :link ; :visited

Structural Pseudo-classes. 
ej: :root ; :first-child ; :last-child ; :empty ; :only-child ; :nth-child


Pseudo-elements. 
ej: ::marker ; ::first-letter ; ::first-line ; ::selection ; ::before ; ::after 

Attribute Selectors.

[attribute]
selector[attribute]
[attribute="value"]

ej:
[src] { This will target any element that has a src attribute. }

img[src] { This will only target img elements that have a src attribute. }

img[src="puppy.jpg"] { This will target img elements with a src attribute that is exactly "puppy.jpg" }

*/

/* This rule will only select divs with a class of child */
main > div {
    /* Our cool CSS */
}
  
/* This rule will only select divs with a class of grand-child */
main > div > div {
    /* More cool CSS */
}

/* This rule will only select the div with the class child group2 */
.group1 + div {
    /* Our cool CSS */
}

/* This rule will only select the div with the class child group3 */
.group1 + div + div {
    /* More cool CSS */
}

/* This rule will select all of .group1's siblings - in this case the 2nd and 3rd .child divs */
.group1 ~ div {
    /* Our cool CSS */
}

/*--------------------------------------------------*/

a:hover {
    color: green;
    text-decoration: underline overline;
}

html:active {
    background: yellow;   
}


/*-----------------------------------------------------*/

.emojify::before {
    content: 'ðŸ˜Ž ðŸ¥¸ ðŸ¤“';
}

.emojify::after {
    content: 'ðŸ¤“ ðŸ¥¸ ðŸ˜Ž';
}

/*-----------------------------------------------------*/

p::first-letter {
    font-weight: bold;
    color: red;
}

p::selection {
    background: #fff;
    color: #ff0000;
}

div::before {
    content: "before";
}
div::after {
    content: "after";
}
  